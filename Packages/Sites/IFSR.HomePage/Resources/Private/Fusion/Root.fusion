/**
 * Root Fusion template for the ifsr.de site
 */
prototype(Neos.NodeTypes:Page) < prototype(Neos.Neos:Page) {
    head {
        stylesheets.site = Neos.Fusion:Template {
            templatePath = 'resource://IFSR.HomePage/Private/Templates/Page/Default.html'
            sectionName = 'stylesheets'
        }

        javascripts.site = Neos.Fusion:Template {
            templatePath = 'resource://IFSR.HomePage/Private/Templates/Page/Default.html'
            sectionName = 'headScripts'
        }
    }

    body {
        templatePath = 'resource://IFSR.HomePage/Private/Templates/Page/Default.html'
        sectionName = 'body'
        parts {
            menu = Neos.Neos:Menu
            menu {
                templatePath = 'resource://IFSR.HomePage/Private/Templates/FusionObjects/MainMenu.html'
                entryLevel = 1
                maximumLevels = 2
            }

            languageMenu = Neos.Neos:DimensionsMenu {
                templatePath = 'resource://IFSR.HomePage/Private/Templates/FusionObjects/LanguageMenu.html'
                dimension = 'language'
            }
        }

        // These are your content areas, you can define as many as you want, just name them and the nodePath.
		content {
            // The default content section
			main = Neos.Neos:PrimaryContent {
                nodePath = 'main'
            }
            footer = Neos.Neos:ContentCollection {
                nodePath = ${q(site).find('footer').property('_path')}
                collection = ${q(site).children('footer').children()}
            }
        }

        javascripts.site = Neos.Fusion:Template {
            templatePath = 'resource://IFSR.HomePage/Private/Templates/Page/Default.html'
            sectionName = 'bodyScripts'
        }
    }
}

page = Neos.NodeTypes:Page

prototype(IFSR.HomePage:BlogList) < prototype(Neos.Fusion:Collection) {
    @context.maxEntries = ${q(node).property('numberOfPosts')}

    collection = ${q(site).find('[instanceof IFSR.HomePage:BlogPost]').slice(0, maxEntries).sort('creationDateTime', 'DESC').get()}
    itemRenderer = IFSR.HomePage:BlogPostPreview
}

prototype(IFSR.HomePage:BlogArchive) < prototype(Neos.Fusion:Template) {
    @cache {
        mode = 'dynamic'
        entryIdentifier {
            node = ${node}
        }
        entryDiscriminator = ${request.arguments.pagination}
        context {
            1 = 'node'
            2 = 'documentNode'
            3 = 'site'
        }
        entryTags {
            1 = ${'Node_' + node.identifier}
        }
    }

    templatePath = 'resource://IFSR.HomePage/Private/Templates/NodeTypes/BlogArchive.html'

    pagination = Neos.Fusion:RawArray {
        itemsPerPage = ${q(node).property('numberOfPostsPerPage')}
        maximumNumberOfLinks = 15
    }

    posts = ${q(site).find('[instanceof IFSR.HomePage:BlogPost]').sort('creationDateTime', 'DESC').get()}
    itemRenderer = IFSR.HomePage:BlogPostPreview
}

prototype(IFSR.HomePage:BlogPostPreview) < prototype(Neos.Fusion:Template) {
    templatePath = 'resource://IFSR.HomePage/Private/Templates/FusionObjects/BlogPostPreview.html'
    main = Neos.Neos:ContentCollectionRenderer {
        @context.node = ${q(item).children('main').get()}
    }

    // uncommenting the following will disable editing of the preview
    /* prototype(Neos.Neos:Content) {
        @process.contentElementWrapping >
    }*/

}

prototype(IFSR.HomePage:MembersList) < prototype(Neos.Fusion:Collection) {
    selectedListing = ${q(node).property('list-type')}
    collection = ${q(site).find('[instanceof IFSR.HomePage:Member]').filter('[' + this.selectedListing + ' = true]').get()}
    itemRenderer = IFSR.HomePage:Member {
        @context.node = ${item}
        email = ""
        position = ""
    }
}
